name: releases

on:
  workflow_dispatch:
    inputs:
      versionTag:
        description: 'Version tag to create tag and release'
        type: string
        required: true

jobs:
  reate-release:
    runs-on: ubuntu-latest
    env:
      GIT_TOKEN: ${{ secrets.GIT_ACTIONS_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Prepare release
        id: release
        run: |
          echo "::set-output name=DATE::$(date +'%Y-%m-%d')"
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ github.event.inputs.versionTag }}
          name: Release v${{ github.event.inputs.versionTag }} ${{steps.release.outputs.DATE}}
          generateReleaseNotes: true
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_ACTIONS_TOKEN }}

  static-check:
    runs-on: ubuntu-20.04
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        #Setup task
      - name: Install Task
        uses: arduino/setup-task@v1

      - name: Run checks
        run: task runChecks

  test:
    runs-on: ubuntu-20.04
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        #Setup task
      - name: Install Task
        uses: arduino/setup-task@v1

      - name: Run tests
        run: task runTests

  build:
    runs-on: ubuntu-20.04
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        #Setup task
      - name: Install Task
        uses: arduino/setup-task@v1

      - name: Run build
        run: task runBuild

  deploy:
    runs-on: ubuntu-20.04
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        #Setup task
      - name: Install Task
        uses: arduino/setup-task@v1

      - name: Run deployment
        run: task runDeploy
